#INSTRUCTIONS:

#pip install fpdf first 
#after running this script, it will re route you to ADSK login 
#copy paste code from URL and enter it in response

import requests
import webbrowser
import json
import os

# Replace with your Client ID, Client Secret, and Callback URL from APS app
CLIENT_ID = "A1nztYubWhnUuGqYYwiAh5GpAFKLlb2SwKpJIo4nl2RmDzL7"
CLIENT_SECRET = "O8XG4Kfyz0xEWyMYx2J8h2pgeRkGfrGOVmHpj7GNT1dJnAsYyeAxLht7EGFcNyK6"
REDIRECT_URI = "http://localhost:8080/"

# Step 1: Generate and open authorization URL
scopes = "data:read data:write account:read"  # Added account:read
auth_url = (
    f"https://developer.api.autodesk.com/authentication/v2/authorize?"
    f"response_type=code&client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&"
    f"scope={scopes}"
)
print(f"Open this URL in your browser to authorize: {auth_url}")
webbrowser.open(auth_url)

# Step 2: Get and save tokens
code = input("Enter the authorization code from the redirect URL: ")
token_url = "https://developer.api.autodesk.com/authentication/v2/token"
payload = {
    "grant_type": "authorization_code",
    "code": code,
    "client_id": CLIENT_ID,
    "client_secret": CLIENT_SECRET,
    "redirect_uri": REDIRECT_URI,
}

try:
    response = requests.post(token_url, data=payload)
    print(f"Response Status: {response.status_code}")
    print(f"Response Text: {response.text}")

    if response.status_code == 200:
        token_data = response.json()
        access_token = token_data.get("access_token")
        refresh_token = token_data.get("refresh_token")
        expires_in = token_data.get("expires_in")

        if access_token and refresh_token:
            with open("tokens.json", "w") as f:
                json.dump(
                    {
                        "access_token": access_token,
                        "refresh_token": refresh_token,
                        "expires_in": expires_in
                    },
                    f,
                    indent=2
                )
            print(f"Tokens saved. Access Token: {access_token}, Refresh Token: {refresh_token}, Expires In: {expires_in}")

            # Verify account:read scope
            headers = {"Authorization": f"Bearer {access_token}"}
            profile_response = requests.get(
                "https://developer.api.autodesk.com/userprofile/v1/users/@me",
                headers=headers
            )
            if profile_response.status_code == 200:
                print("account:read verified. User Profile:", profile_response.json())
            else:
                print(f"Failed to verify account:read: {profile_response.status_code} {profile_response.text}")
        else:
            print("Missing access_token or refresh_token in response.")
    else:
        try:
            error_data = response.json()
            error = error_data.get("error")
            error_description = error_data.get("error_description")
            print(f"Failed to get tokens: {error_description}")
            if error == "invalid_scope":
                print("Invalid scope error. Check:")
                print("- Scope syntax (must be space-separated, e.g., 'data:read data:write account:read')")
                print("- User Profile API enabled in APS app for 'account:read'")
                print("- User account permissions for 'account:read'")
        except ValueError:
            print(f"Failed to parse response: {response.text}")
except requests.RequestException as e:
    print(f"Request failed: {str(e)}")
